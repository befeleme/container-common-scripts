name: Container-tests by GitHub Action at Testing Farm

on:
  issue_comment:
    types:
      - created
jobs:
  build:
    # This job only runs for '[test]' pull request comments by owner, member
    name: Container-tests by GitHub Action on Testing Farm service
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        container-to-test: ["postgresql-container", "s2i-nodejs-container", "s2i-python-container"]
        include:
          - tmt_plan: "fedora"
            os_test: "fedora"
            context: "Fedora"
            compose: "Fedora-latest"
            branch: "main"
            tmt_repo: "https://github.com/sclorg/sclorg-testing-farm"
          - tmt_plan: "centos7"
            os_test: "centos7"
            context: "CentOS7"
            compose: "CentOS-7"
            branch: "main"
            tmt_repo: "https://github.com/sclorg/sclorg-testing-farm"
          - tmt_plan: "rhel7-docker"
            os_test: "rhel7"
            context: "RHEL7"
            compose: "RHEL-7.9-Released"
            branch: "master"
            tmt_repo: "https://gitlab.cee.redhat.com/platform-eng-core-services/sclorg-tmt-plans"
            tf_scope: "private"
          - tmt_plan: "rhel8-docker"
            os_test: "rhel8"
            context: "RHEL8"
            compose: "RHEL-8.6.0-Nightly"
            branch: "master"
            tmt_repo: "https://gitlab.cee.redhat.com/platform-eng-core-services/sclorg-tmt-plans"
            tf_scope: "private"

    if: |
      github.event.issue.pull_request
      && (contains(github.event.comment.body, '[test]') || contains(github.event.comment.body, '[test-all]'))
      && contains(fromJson('["OWNER", "MEMBER"]'), github.event.comment.author_association)
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: "refs/pull/${{ github.event.issue.number }}/head"

      # https://github.com/sclorg/testing-farm-as-github-action
      - name: Schedule tests on external Testing Farm by Testing-Farm-as-github-action
        id: github_action
        uses: sclorg/testing-farm-as-github-action@v1
        with:
          git_url: ${{ matrix.tmt_repo }}
          git_ref: ${{ matrix.branch }}
          tf_scope: ${{ matrix.tf_scope }}
          tmt_plan_regex: ${{ matrix.tmt_plan }}
          pull_request_status_name: "${{ matrix.context }}-${{ matrix.container-to-test }}
          variables: "REPO_URL=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY;REPO_NAME=$GITHUB_REPOSITORY;PR_NUMBER=${{ github.event.issue.number }};OS=${{ matrix.os_test }};TEST_NAME=test;TESTED_IMAGE=${{ matrix.container-to-test }}"
          compose: ${{ matrix.compose }}
